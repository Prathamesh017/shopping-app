{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { createSlice } from \"@reduxjs/toolkit\"; // const initialData=0;\n// const changeTheNumber=(state={initialData},action)=>{\n//     switch(action.type){\n//         case \"INCREMENT\" :return state=state+action.payload; \n//         case \"DECREMENT\" :return state=state-1; \n//         default:return state.initialData;\n//     }\n// }\n\nconst counterslice = createSlice({\n  name: \"counter\",\n  initialState: {\n    counter: 0\n  },\n  reducers: {\n    increment(state, action) {\n      console.log(state.counter);\n      return state.counter + 1;\n    },\n\n    decrement(state, action) {\n      console.log(\"decrement\");\n      return state.counter--;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterslice.reducer\n});\nexport { counterslice };\nexport const actions = counterslice.actions;\nexport default store; // export default changeTheNumber;","map":{"version":3,"sources":["C:/Users/pt/Desktop/React Projects/E-Commerce App(Redux)/src/reducer/updown.jsx"],"names":["configureStore","createSlice","counterslice","name","initialState","counter","reducers","increment","state","action","console","log","decrement","store","reducer","actions"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AAGA;;AAEA,MAAMC,YAAY,GAACD,WAAW,CAAC;AAC3BE,EAAAA,IAAI,EAAC,SADsB;AAE3BC,EAAAA,YAAY,EAAC;AAACC,IAAAA,OAAO,EAAC;AAAT,GAFc;AAG3BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAAOC,MAAP,EAAc;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACH,OAAlB;AACA,aAAOG,KAAK,CAACH,OAAN,GAAc,CAArB;AACH,KAJI;;AAKLO,IAAAA,SAAS,CAACJ,KAAD,EAAOC,MAAP,EAAc;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAOH,KAAK,CAACH,OAAN,EAAP;AAEH;;AATI;AAHkB,CAAD,CAA9B;AAgBA,MAAMQ,KAAK,GAACb,cAAc,CAAC;AACvBc,EAAAA,OAAO,EAACZ,YAAY,CAACY;AADE,CAAD,CAA1B;AAGA,SAAQZ,YAAR;AACA,OAAO,MAAMa,OAAO,GAACb,YAAY,CAACa,OAA3B;AACP,eAAeF,KAAf,C,CACA","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n// const initialData=0;\r\n\r\n// const changeTheNumber=(state={initialData},action)=>{\r\n  \r\n  \r\n//     switch(action.type){\r\n//         case \"INCREMENT\" :return state=state+action.payload; \r\n//         case \"DECREMENT\" :return state=state-1; \r\n//         default:return state.initialData;\r\n        \r\n//     }\r\n\r\n\r\n// }\r\n\r\nconst counterslice=createSlice({\r\n    name:\"counter\",\r\n    initialState:{counter:0},\r\n    reducers:{\r\n        increment(state,action){\r\n            console.log(state.counter);\r\n            return state.counter+1;\r\n        },\r\n        decrement(state,action){\r\n            console.log(\"decrement\");\r\n            return state.counter--;\r\n\r\n        },\r\n    }\r\n\r\n})\r\nconst store=configureStore({\r\n    reducer:counterslice.reducer\r\n})\r\nexport {counterslice};\r\nexport const actions=counterslice.actions;\r\nexport default store;\r\n// export default changeTheNumber;"]},"metadata":{},"sourceType":"module"}