{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cartSlice\",\n  initialState: {\n    itemsList: [],\n    totalQuantity: 0,\n    showCart: false,\n    finaltotalprice: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newitem = action.payload; //   to check if the item already exists\n\n      const existingItem = state.itemsList.find(item => item.id === newitem.id);\n\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totalPrice += newitem.price;\n      } else {\n        state.itemsList.push({\n          id: newitem.id,\n          name: newitem.name,\n          price: newitem.price,\n          quantity: 1,\n          totalPrice: newitem.price\n        });\n      }\n\n      state.totalQuantity++;\n      state.finaltotalprice += newitem.price;\n    },\n\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingitem = state.itemsList.find(item => id === item.id);\n\n      if (existingitem.totalQuantity == 1) {} else {\n        existingitem.quantity--;\n        state.totalQuantity--;\n        existingitem.tot;\n      }\n    },\n\n    showCart(state) {\n      state.showCart = true;\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  showCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/pt/Desktop/React Projects/E-Commerce With Redux TooLKit/src/Redux&Store/cart.jsx"],"names":["createSlice","cartSlice","name","initialState","itemsList","totalQuantity","showCart","finaltotalprice","reducers","addToCart","state","action","newitem","payload","existingItem","find","item","id","quantity","totalPrice","price","push","removeFromCart","existingitem","tot","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAACD,WAAW,CAAC;AACxBE,EAAAA,IAAI,EAAC,WADmB;AAExBC,EAAAA,YAAY,EAAC;AACTC,IAAAA,SAAS,EAAC,EADD;AAETC,IAAAA,aAAa,EAAC,CAFL;AAGTC,IAAAA,QAAQ,EAAC,KAHA;AAITC,IAAAA,eAAe,EAAC;AAJP,GAFW;AAQxBC,EAAAA,QAAQ,EAAC;AACHC,IAAAA,SAAS,CAACC,KAAD,EAAOC,MAAP,EAAc;AACnB,YAAMC,OAAO,GAACD,MAAM,CAACE,OAArB,CADmB,CAErB;;AACC,YAAMC,YAAY,GAACJ,KAAK,CAACN,SAAN,CAAgBW,IAAhB,CAAsBC,IAAD,IAAQA,IAAI,CAACC,EAAL,KAAUL,OAAO,CAACK,EAA/C,CAAnB;;AACA,UAAGH,YAAH,EAAgB;AACbA,QAAAA,YAAY,CAACI,QAAb;AACAJ,QAAAA,YAAY,CAACK,UAAb,IAAyBP,OAAO,CAACQ,KAAjC;AACF,OAHD,MAII;AACAV,QAAAA,KAAK,CAACN,SAAN,CAAgBiB,IAAhB,CAAqB;AACjBJ,UAAAA,EAAE,EAACL,OAAO,CAACK,EADM;AAEjBf,UAAAA,IAAI,EAACU,OAAO,CAACV,IAFI;AAGjBkB,UAAAA,KAAK,EAACR,OAAO,CAACQ,KAHG;AAIjBF,UAAAA,QAAQ,EAAC,CAJQ;AAKjBC,UAAAA,UAAU,EAACP,OAAO,CAACQ;AALF,SAArB;AAQH;;AACDV,MAAAA,KAAK,CAACL,aAAN;AACAK,MAAAA,KAAK,CAACH,eAAN,IAAuBK,OAAO,CAACQ,KAA/B;AAEF,KAtBE;;AAuBHE,IAAAA,cAAc,CAACZ,KAAD,EAAOC,MAAP,EAAc;AACxB,YAAMM,EAAE,GAACN,MAAM,CAACE,OAAhB;AAEA,YAAMU,YAAY,GAACb,KAAK,CAACN,SAAN,CAAgBW,IAAhB,CAAsBC,IAAD,IAAQC,EAAE,KAAGD,IAAI,CAACC,EAAvC,CAAnB;;AACA,UAAGM,YAAY,CAAClB,aAAb,IAA4B,CAA/B,EAAiC,CAEhC,CAFD,MAGI;AACAkB,QAAAA,YAAY,CAACL,QAAb;AACAR,QAAAA,KAAK,CAACL,aAAN;AACAkB,QAAAA,YAAY,CAACC,GAAb;AACH;AAEJ,KApCE;;AAqCHlB,IAAAA,QAAQ,CAACI,KAAD,EAAO;AACZA,MAAAA,KAAK,CAACJ,QAAN,GAAe,IAAf;AACF;;AAvCE;AARe,CAAD,CAA3B;AAoDA,OAAO,MAAM;AAACG,EAAAA,SAAD;AAAWa,EAAAA,cAAX;AAA0BhB,EAAAA;AAA1B,IAAoCL,SAAS,CAACwB,OAApD;AACP,eAAexB,SAAS,CAACyB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice=createSlice({\r\n    name:\"cartSlice\",\r\n    initialState:{\r\n        itemsList:[],\r\n        totalQuantity:0,\r\n        showCart:false,\r\n        finaltotalprice:0\r\n    },\r\n    reducers:{\r\n          addToCart(state,action){\r\n              const newitem=action.payload;\r\n            //   to check if the item already exists\r\n             const existingItem=state.itemsList.find((item)=>item.id===newitem.id);\r\n             if(existingItem){\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice+=newitem.price;\r\n             }\r\n             else{\r\n                 state.itemsList.push({\r\n                     id:newitem.id,\r\n                     name:newitem.name,\r\n                     price:newitem.price,\r\n                     quantity:1,\r\n                     totalPrice:newitem.price,\r\n                     \r\n                 })\r\n             }\r\n             state.totalQuantity++;\r\n             state.finaltotalprice+=newitem.price;\r\n         \r\n          },\r\n          removeFromCart(state,action){\r\n              const id=action.payload;\r\n\r\n              const existingitem=state.itemsList.find((item)=>id===item.id);\r\n              if(existingitem.totalQuantity==1){\r\n\r\n              }\r\n              else{\r\n                  existingitem.quantity--;\r\n                  state.totalQuantity--;\r\n                  existingitem.tot\r\n              }\r\n\r\n          },\r\n          showCart(state){\r\n             state.showCart=true\r\n          }\r\n          \r\n    }\r\n})\r\n\r\nexport const {addToCart,removeFromCart,showCart}=cartSlice.actions;\r\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}